十进制数 --> 原码 --> 反码 --> 补码
+1 -十进制转二进制，首位符号位-> [0000 0001] --> [0000 0001] --> [0000 0001]
-1 -十进制转二进制，首位符号位-> [1000 0001] -符号位不变，其余位取反-> [1111 1110] -加1-> [1111 1111]


因为 1-1 可以表示位 1+(-1) ,所以电路设计时，可以只设计加法，而不用额外设计减法，
如果用原码存储，那么 
    1+(-1) 
    = [0000 0001]原 + [1000 0001]原
    = [1000 0010]原
    = -2
    结果是错的
    
如果用反码存储，那么 
    1+(-1) 
    = [0000 0001]原 + [1000 0001]原
    = [0000 0001]反 + [1111 1110]反
    = [1111 1111]反 
    = [1000 0000]原
    = -0
    虽然 +0 -0 没区别，但是跟定义还是有出入，所有 -0 是错的
    
如果用补码存储，那么  
    1+(-1) 
    = [0000 0001]原 + [1000 0001]原
    = [0000 0001]反 + [1111 1110]反
    = [0000 0001]补 + [1111 1111]补
    = [0000 0000]补      # 此处变成 0 是因为 超出表示范围 进位 丢失造成的 
    = [0000 0000]原
    = +0
    所以是对的，而 -0 [1000 0000] 可以用来表示 -128 ，所以在计算机 7 bit 位可以表示 -128～+127 之间的数，就是因为用 -0 代表了 -128


