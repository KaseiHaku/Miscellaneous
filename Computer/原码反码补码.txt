十进制数 --> 原码 --> 反码 --> 补码
+1 -十进制转二进制，首位符号位-> [0000 0001] --> [0000 0001] --> [0000 0001]
-1 -十进制转二进制，首位符号位-> [1000 0001] -符号位不变，其余位取反-> [1111 1110] -加1-> [1111 1111]


因为 1-1 可以表示位 1+(-1) ,所以电路设计时，可以只设计加法，而不用额外设计减法，
如果用原码存储，那么 
    1+(-1) 
    = [0000 0001]原 + [1000 0001]原
    = [1000 0010]原
    = -2
    结果是错的
    
如果用反码存储，那么 
    1+(-1) 
    = [0000 0001]原 + [1000 0001]原
    = [0000 0001]原 + [1111 1110]反
    = [1111 1111]反 
    = [1000 0000]原
    = -0
    +0 -0 没区别，所以是对的
    
如果用补码存储，那么  
    1+(-1) 
    = [0000 0001]原 + [1000 0001]原
    = [0000 0001]原 + [1111 1110]反
    = [1111 1111]反 
    = [1000 0000]原
    = -0
    +0 -0 没区别，所以是对的


加减乘除是计算机最基本的运算，如果让计算判断符号位，会增加计算电路设计的复杂度，为了计算电路设计简单：
因为用原码表示，计算机中会存在 +0 和 -0 即 [0000 0000] 和 [1000 0000]
